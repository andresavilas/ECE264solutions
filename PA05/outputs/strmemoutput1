==3923== Memcheck, a memory error detector
==3923== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==3923== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==3923== Command: ./pa05 s inputs/strinput1 outputs/stroutput1
==3923== Parent PID: 3919
==3923== 
--3923-- 
--3923-- Valgrind options:
--3923--    --tool=memcheck
--3923--    --leak-check=full
--3923--    --verbose
--3923--    --log-file=outputs/strmemoutput1
--3923-- Contents of /proc/version:
--3923--   Linux version 2.6.32-358.18.1.el6.x86_64 (mockbuild@x86-003.build.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-3) (GCC) ) #1 SMP Fri Aug 2 17:04:38 EDT 2013
--3923-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--3923-- Page sizes: currently 4096, max supported 4096
--3923-- Valgrind library directory: /usr/lib64/valgrind
--3923-- Reading syms from /home/shay/a/avila2/ECE264/solutions/ECE264solutions/PA05/pa05
--3923-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--3923--    object doesn't have a dynamic symbol table
--3923-- Reading syms from /lib64/ld-2.12.so
--3923-- Scheduler: using generic scheduler lock implementation.
--3923-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==3923== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-3923-by-avila2-on-ecelinux29.ecn.purdue.edu
==3923== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-3923-by-avila2-on-ecelinux29.ecn.purdue.edu
==3923== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-3923-by-avila2-on-ecelinux29.ecn.purdue.edu
==3923== 
==3923== TO CONTROL THIS PROCESS USING vgdb (which you probably
==3923== don't want to do, unless you know exactly what you're doing,
==3923== or are doing some strange experiment):
==3923==   /usr/lib64/valgrind/../../bin/vgdb --pid=3923 ...command...
==3923== 
==3923== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==3923==   /path/to/gdb ./pa05
==3923== and then give GDB the following command
==3923==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=3923
==3923== --pid is optional if only one valgrind process is running
==3923== 
--3923-- REDIR: 0x384de17520 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--3923-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--3923-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--3923-- REDIR: 0x384de17390 (index) redirected to 0x4a07bf0 (index)
--3923-- REDIR: 0x384de17410 (strcmp) redirected to 0x4a08530 (strcmp)
--3923-- Reading syms from /lib64/libc-2.12.so
--3923-- REDIR: 0x384e284ec0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3923-- REDIR: 0x384e287180 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3923-- REDIR: 0x384e282e30 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--3923-- REDIR: 0x384e27f8d0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3923-- REDIR: 0x384e327ac0 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
--3923-- REDIR: 0x384e27a8e0 (malloc) redirected to 0x4a0696c (malloc)
--3923-- REDIR: 0x384e283540 (memchr) redirected to 0x4a085d0 (memchr)
--3923-- REDIR: 0x384e289860 (memcpy) redirected to 0x4a08b20 (memcpy)
==3923== Warning: silly arg (-8) to malloc()
--3923-- REDIR: 0x384e281310 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3923-- REDIR: 0x384e332d90 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
==3923== Invalid write of size 8
==3923==    at 0x400944: readString (answer05.c:171)
==3923==    by 0x400B4A: main (pa05.c:36)
==3923==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3923== 
==3923== 
==3923== Process terminating with default action of signal 11 (SIGSEGV)
==3923==  Access not within mapped region at address 0x0
==3923==    at 0x400944: readString (answer05.c:171)
==3923==    by 0x400B4A: main (pa05.c:36)
==3923==  If you believe this happened as a result of a stack
==3923==  overflow in your program's main thread (unlikely but
==3923==  possible), you can try to increase the size of the
==3923==  main thread stack using the --main-stacksize= flag.
==3923==  The main thread stack size used in this run was 10485760.
--3923-- REDIR: 0x384e27b710 (free) redirected to 0x4a06369 (free)
==3923== 
==3923== HEAP SUMMARY:
==3923==     in use at exit: 888 bytes in 4 blocks
==3923==   total heap usage: 4 allocs, 0 frees, 888 bytes allocated
==3923== 
==3923== Searching for pointers to 4 not-freed blocks
==3923== Checked 1,113,208 bytes
==3923== 
==3923== 80 bytes in 1 blocks are definitely lost in loss record 1 of 4
==3923==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3923==    by 0x400943: readString (answer05.c:171)
==3923==    by 0x400B4A: main (pa05.c:36)
==3923== 
==3923== 120 bytes in 1 blocks are definitely lost in loss record 3 of 4
==3923==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3923==    by 0x384E267E98: getdelim (in /lib64/libc-2.12.so)
==3923==    by 0x4008D0: readString (answer05.c:163)
==3923==    by 0x400B4A: main (pa05.c:36)
==3923== 
==3923== LEAK SUMMARY:
==3923==    definitely lost: 200 bytes in 2 blocks
==3923==    indirectly lost: 0 bytes in 0 blocks
==3923==      possibly lost: 0 bytes in 0 blocks
==3923==    still reachable: 688 bytes in 2 blocks
==3923==         suppressed: 0 bytes in 0 blocks
==3923== Reachable blocks (those to which a pointer was found) are not shown.
==3923== To see them, rerun with: --leak-check=full --show-reachable=yes
==3923== 
==3923== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 6 from 6)
==3923== 
==3923== 1 errors in context 1 of 3:
==3923== Invalid write of size 8
==3923==    at 0x400944: readString (answer05.c:171)
==3923==    by 0x400B4A: main (pa05.c:36)
==3923==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3923== 
--3923-- 
--3923-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--3923-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==3923== 
==3923== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 6 from 6)
